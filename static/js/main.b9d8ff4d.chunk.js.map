{"version":3,"sources":["ImportPictures.tsx","Seances.tsx","Home.tsx","ui/SearchField.tsx","Patients.tsx","Quotations.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["ImportPictures","loading","onChange","htmlFor","id","type","accept","multiple","style","display","LoadingButton","color","size","component","capture","Seances","period","Box","List","sx","width","pt","bgcolor","ListSubheader","SeanceItem","initialNurse","patient","careNames","date","Divider","ListItem","alignItems","secondaryAction","Typography","ListItemAvatar","Avatar","ListItemText","primary","secondary","flexDirection","map","name","variant","StyledFab","styled","props","Fab","Link","position","zIndex","top","left","right","margin","day","Home","useState","nb","setNb","CssBaseline","initialSlide","spaceBetween","onSlideChange","s","console","log","realIndex","virtualIndex","AppBar","bottom","Toolbar","to","Add","flexGrow","SearchField","Paper","p","TextField","placeholder","InputProps","startAdornment","InputAdornment","Search","Patients","height","IconButton","ArrowBack","ml","mt","px","SectionList","data","firstname","lastname","transformBy","substring","toUpperCase","getDisplayRow","i","tree","useMemo","levelRoot","root","children","sortBy","uniq","depth","level1","Object","entries","groupBy","v","reduce","a","b","level2","String","window","innerHeight","getChildren","isSticky","rowRenderer","nodeInfo","node","marginLeft","fontWeight","Math","random","renderRoot","overscanRowCount","Quotations","quotations","keyLetter","label","price","priceDOM","coefficient","value","setValue","borderBottom","borderColor","Tabs","event","newValue","aria-label","Tab","TabPanel","index","quotation","QuotationItem","transform","disablePadding","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","other","role","hidden","aria-labelledby","theme","createTheme","palette","main","App","ThemeProvider","path","exact","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b9d8ff4d.chunk.js","sourcesContent":["import FileDownloadIcon from \"@mui/icons-material/FileDownload\";\nimport PhotoCamera from \"@mui/icons-material/PhotoCamera\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\ntype ImportPicturesProps = {\n  loading?: boolean;\n  onChange: (e: any) => void;\n};\n\nexport function ImportPictures({ loading, onChange }: ImportPicturesProps) {\n  return (\n    <>\n      <label htmlFor=\"icon-button-file\">\n        <input\n          id=\"icon-button-file\"\n          type=\"file\"\n          accept=\"image/*\"\n          multiple\n          style={{ display: \"none\" }}\n          onChange={onChange}\n        />\n        <LoadingButton color=\"inherit\" size=\"large\" component=\"span\" loading={loading}>\n          <FileDownloadIcon />\n        </LoadingButton>\n      </label>\n      <label htmlFor=\"icon-button-camera\">\n        <input\n          accept=\"image/*\"\n          capture={true}\n          multiple\n          id=\"icon-button-camera\"\n          type=\"file\"\n          style={{ display: \"none\" }}\n          onChange={onChange}\n        />\n        <LoadingButton color=\"inherit\" size=\"large\" component=\"span\" loading={loading}>\n          <PhotoCamera />\n        </LoadingButton>\n      </label>\n    </>\n  );\n}\n","import { Box, Typography, ListSubheader } from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Divider from \"@mui/material/Divider\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\n\nexport function Seances({ period }: { period: string }) {\n  return (\n    <Box>\n      <List sx={{ width: \"100%\", pt: 0, bgcolor: \"background.paper\" }}>\n        <ListSubheader sx={{ bgcolor: \"common.black\", color: \"secondary.main\" }}>{period}</ListSubheader>\n\n        <SeanceItem\n          initialNurse=\"RS\"\n          patient=\"Paul Boulanger\"\n          careNames={[\"PSC\", \"Injection sous cutanée\"]}\n          date=\"8h22\"\n        />\n        <Divider />\n        <SeanceItem initialNurse=\"MP\" bgcolor=\"#468b38\" patient=\"Jack Russel\" careNames={[\"Injection\"]} date=\"9h32\" />\n        <Divider />\n        <SeanceItem initialNurse=\"RS\" patient=\"Sandra Adams\" careNames={[\"Pansement\"]} date=\"10h03\" />\n      </List>\n    </Box>\n  );\n}\n\nfunction SeanceItem({ initialNurse, bgcolor = \"#e4c332\", patient, careNames, date }: any) {\n  return (\n    <ListItem alignItems=\"flex-start\" secondaryAction={<Typography color=\"text.primary\">{date}</Typography>}>\n      <ListItemAvatar>\n        <Avatar sx={{ bgcolor }}>{initialNurse}</Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={patient}\n        secondary={\n          <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n            {careNames?.map((name: string) => (\n              <Typography sx={{ display: \"inline\" }} component=\"span\" variant=\"body2\" color=\"text.primary\">\n                {name}\n              </Typography>\n            ))}\n          </Box>\n        }\n      />\n    </ListItem>\n  );\n}\n","import { Box, Typography, AppBar, Toolbar, Fab, CssBaseline } from \"@mui/material\";\nimport { ImportPictures } from \"./ImportPictures\";\nimport { Link } from \"react-router-dom\";\nimport { Seances } from \"./Seances\";\nimport { styled } from \"@mui/material/styles\";\nimport { Add } from \"@mui/icons-material\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\nimport { useState } from \"react\";\n\nconst FabLink = (props: any) => <Fab component={Link} {...props} />;\nconst StyledFab = styled(FabLink)({\n  position: \"absolute\",\n  zIndex: 1,\n  top: -30,\n  left: 0,\n  right: 0,\n  margin: \"0 auto\",\n});\n\nconst day = [\"Hier\", \"Aujourd'hui\", \"Demain\"];\n\nexport function Home() {\n  const [nb, setNb] = useState(0);\n\n  return (\n    <>\n      <CssBaseline />\n      <Swiper\n        // virtual\n        initialSlide={1}\n        spaceBetween={0}\n        onSlideChange={(s) => {\n          console.log(s.realIndex);\n          setNb(s.realIndex);\n        }}\n      >\n        <SwiperSlide key={\"1\"} virtualIndex={0}>\n          <Seances period=\"Matin\" />\n          <Seances period=\"Midi\" />\n          <Seances period=\"Après-midi\" />\n          <Seances period=\"Soir\" />\n        </SwiperSlide>\n        <SwiperSlide key={\"2\"} virtualIndex={1}>\n          <Seances period=\"Matin\" />\n          <Seances period=\"Midi\" />\n          <Seances period=\"Après-midi\" />\n          <Seances period=\"Soir\" />\n        </SwiperSlide>\n        <SwiperSlide key={\"3\"} virtualIndex={2}>\n          <Seances period=\"Matin\" />\n          <Seances period=\"Midi\" />\n          <Seances period=\"Après-midi\" />\n          <Seances period=\"Soir\" />\n        </SwiperSlide>\n      </Swiper>\n\n      <AppBar position=\"fixed\" color=\"primary\" sx={{ top: \"auto\", bottom: 0, zIndex: 1000 }}>\n        <Toolbar variant=\"dense\" color=\"#fff\">\n          <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\n            {day?.[nb]}\n          </Typography>\n          <StyledFab color=\"secondary\" to=\"/quotations\">\n            <Add />\n          </StyledFab>\n\n          <Box sx={{ flexGrow: 1 }} />\n          <ImportPictures onChange={console.log} />\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n}\n","import { Paper, TextField, TextFieldProps } from \"@mui/material\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { Search } from \"@mui/icons-material\";\n\nexport function SearchField(props: TextFieldProps) {\n  return (\n    <Paper sx={{ p: 1 }}>\n      <TextField\n        placeholder=\"Recherche\"\n        variant=\"standard\"\n        sx={{ width: \"100%\" }}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Search />\n            </InputAdornment>\n          ),\n        }}\n        {...props}\n      />\n    </Paper>\n  );\n}\n","import { Box, AppBar, Toolbar, Typography, IconButton } from \"@mui/material\";\nimport { ArrowBack } from \"@mui/icons-material\";\nimport { SearchField } from \"./ui/SearchField\";\nimport { StickyTree } from \"react-virtualized-sticky-tree\";\nimport { groupBy, uniq, sortBy } from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport { useMemo } from \"react\";\n\nexport function Patients() {\n  const patients = [\n    { id: 1, firstname: \"Paul\", lastname: \"Murond\" },\n    { id: 2, firstname: \"Martine\", lastname: \"Juroux\" },\n    { id: 3, firstname: \"Alain\", lastname: \"Pierre\" },\n    { id: 4, firstname: \"Michel\", lastname: \"Duboit\" },\n    { id: 5, firstname: \"Pierre\", lastname: \"Patin\" },\n  ] as any[];\n\n  return (\n    <Box height=\"100vh\">\n      <AppBar position=\"fixed\" color=\"primary\">\n        <Toolbar variant=\"dense\" color=\"#fff\">\n          <IconButton color=\"inherit\" component={Link} to=\"/quotations\">\n            <ArrowBack />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"h2\" ml={2}>\n            Selectionner un traitement\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Box mt={7} px={2} pt={1} sx={{ height: \"calc(100% - 56px)\" }}>\n        <SearchField placeholder=\"Rechercher un patient\" />\n        <Box p={1} />\n        <SectionList\n          data={patients}\n          transformBy={(patient) => patient.firstname.substring(0, 1).toUpperCase()}\n          getDisplayRow={(patient) => `${patient?.firstname} ${patient?.lastname}`}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nlet i = 0;\n\nfunction SectionList<T extends { id: string }>({\n  data,\n  transformBy,\n  getDisplayRow,\n  ...props\n}: {\n  data?: T[];\n  transformBy: (d: T) => string;\n  getDisplayRow: (d: T) => string;\n}) {\n  const tree = useMemo(() => {\n    const levelRoot = {\n      root: {\n        children: [...(sortBy(uniq(data?.map(transformBy))) || [])],\n        depth: 0,\n      },\n    };\n\n    const level1 = Object.entries(groupBy(data, transformBy))\n      .map(([key, value]) => ({\n        name: key,\n        children: (value as T[]).map((v: T) => v.id),\n        depth: 1,\n      }))\n      ?.reduce((a, b) => ({ ...a, [b.name]: b }), {});\n\n    const level2 = data?.reduce((a: T, b: T) => {\n      return {\n        ...a,\n        [String(b.id)]: { ...b, name: getDisplayRow(b), depth: 2 },\n      };\n    }, {} as any);\n\n    const _tree: any = {\n      ...levelRoot,\n      ...level1,\n      ...level2,\n    };\n\n    return _tree;\n  }, [data, transformBy, getDisplayRow]);\n\n  const getChildren = (id: any) => {\n    if (tree[id].children) {\n      return tree[id].children.map((id: any) => ({\n        id,\n        height: 30,\n        isSticky: true,\n        zIndex: 30 - tree[id].depth,\n      }));\n    }\n  };\n\n  return (\n    <StickyTree\n      root={{ id: \"root\", height: 30 } as any}\n      height={window.innerHeight - 170}\n      getChildren={getChildren}\n      rowRenderer={({ id, style, nodeInfo }: any) => {\n        const node = tree[id];\n        i++;\n\n        return (\n          <div\n            key={id + i + \"\" + Math.random()}\n            style={{\n              ...style,\n              //  backgroundColor: \"#f3f3f3\",\n              marginLeft: nodeInfo.depth === 2 ? \"25px\" : 0,\n              fontWeight: nodeInfo.depth === 1 ? 900 : 500,\n            }}\n          >\n            <Link to={\"/\"}>{node.name}</Link>\n          </div>\n        );\n      }}\n      renderRoot={false}\n      overscanRowCount={20}\n      {...props}\n    />\n  );\n}\n","import {\n  Box,\n  Typography,\n  List,\n  ListItem,\n  Avatar,\n  ListItemText,\n  ListItemAvatar,\n  Tabs,\n  Tab,\n  AppBar,\n  Toolbar,\n  IconButton,\n  ListItemIcon,\n  Checkbox,\n  Fab,\n} from \"@mui/material\";\nimport { SearchField } from \"./ui/SearchField\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Add, ArrowBack } from \"@mui/icons-material\";\n\nexport function Quotations() {\n  const quotations = [\n    {\n      name: \"PSC\",\n      patient: \"Pierre Montoubou\",\n      keyLetter: {\n        id: \"ami\",\n        label: \"ami\",\n        price: 5.1,\n        priceDOM: 4.3,\n      },\n      coefficient: {\n        id: \"1.2\",\n        value: 1.2,\n      },\n    },\n    {\n      name: \"Injection\",\n      patient: \"Simon Dubois\",\n      keyLetter: {\n        id: \"ami\",\n        label: \"ami\",\n        price: 5.1,\n        priceDOM: 4.3,\n      },\n      coefficient: {\n        id: \"2\",\n        value: 2,\n      },\n    },\n  ];\n\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event: any, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box sx={{ p: 1 }}>\n      <AppBar position=\"fixed\" color=\"primary\">\n        <Toolbar variant=\"dense\" color=\"#fff\">\n          <IconButton color=\"inherit\" component={Link} to=\"/\">\n            <ArrowBack />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"h2\" ml={2}>\n            Selectionner un traitement\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Box mt={7}>\n        <SearchField />\n\n        <Box sx={{ width: \"100%\" }}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n              <Tab label=\"Recents\" />\n              <Tab label=\"Liste des cotations\" />\n            </Tabs>\n          </Box>\n          <TabPanel value={value} index={0}>\n            <List sx={{ width: \"100%\", bgcolor: \"background.paper\" }}>\n              {quotations.map((quotation, index) => (\n                <SeanceItem\n                  key={quotation.name + index}\n                  patient={quotation.patient}\n                  careNames={[\n                    `${quotation.name} (${quotation.keyLetter.label} ${quotation.coefficient.value})`,\n                    \"Injection sous cutanée (ami 3)\",\n                  ]}\n                />\n              ))}\n            </List>\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <List>\n              {quotations.map((quotation) => (\n                <QuotationItem key={quotation.name} quotation={quotation} />\n              ))}\n            </List>\n            <Fab\n              variant=\"extended\"\n              size=\"small\"\n              color=\"secondary\"\n              component={Link}\n              to=\"/patients\"\n              sx={{ position: \"fixed\", bottom: 20, right: \"50%\", transform: \"translate(50%)\" }}\n            >\n              <Add /> Ajouter\n            </Fab>\n          </TabPanel>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nfunction QuotationItem({ quotation }: any) {\n  return (\n    <ListItem key={quotation.name} disablePadding component=\"label\">\n      <ListItemIcon>\n        <Checkbox edge=\"start\" tabIndex={-1} disableRipple />\n      </ListItemIcon>\n      <ListItemText primary={`${quotation.name} (${quotation.keyLetter.label} ${quotation.coefficient.value})`} />\n    </ListItem>\n  );\n}\n\nfunction SeanceItem({ bgcolor = \"secondary.main\", patient, careNames, date }: any) {\n  return (\n    <ListItem\n      to=\"/\"\n      component={Link}\n      alignItems=\"flex-start\"\n      secondaryAction={<Typography color=\"text.primary\">{date}</Typography>}\n    >\n      <ListItemAvatar>\n        <Avatar sx={{ bgcolor }}>+</Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        sx={{ color: \"text.primary\" }}\n        primary={patient}\n        secondary={\n          <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n            {careNames?.map((name: string) => (\n              <Typography sx={{ display: \"inline\" }} component=\"span\" variant=\"body2\" color=\"text.secondary\">\n                {name}\n              </Typography>\n            ))}\n          </Box>\n        }\n      />\n    </ListItem>\n  );\n}\n\nfunction TabPanel({ children, value, index, ...other }: any) {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <>{children}</>}\n    </div>\n  );\n}\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home } from \"./Home\";\nimport { Patients } from \"./Patients\";\nimport { Quotations } from \"./Quotations\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  palette: {\n    // primary: {\n    //   main: \"#000\",\n    // },\n    secondary: {\n      main: \"#f72585\",\n    },\n    // background: {\n    //   paper: \"#232323\",\n    //   default: \"#232323\",\n    // },\n    // text: {\n    //   primary: \"#fff\",\n    //   secondary: \"#929292\",\n    // },\n  },\n});\n\nexport function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Switch>\n          <Route path=\"/quotations\">\n            <Quotations />\n          </Route>\n          <Route path=\"/patients\">\n            <Patients />\n          </Route>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}